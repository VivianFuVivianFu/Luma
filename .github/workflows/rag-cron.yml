name: RAG Maintenance Scheduler

on:
  schedule:
    # Daily maintenance at 03:00 UTC
    - cron: '0 3 * * *'
  workflow_dispatch:
    inputs:
      task:
        description: 'Task to run (eval, jobs, or both)'
        required: false
        default: 'both'
        type: choice
        options:
          - both
          - eval
          - jobs

jobs:
  rag-maintenance:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Soft TypeScript check
        run: |
          echo "üîç Running TypeScript check..."
          npx tsc --noEmit --skipLibCheck || {
            echo "‚ö†Ô∏è  TypeScript warnings found, but continuing..."
            true
          }

      - name: Check required secrets
        id: secrets-check
        run: |
          echo "üîê Checking required secrets..."
          
          if [[ -z "${{ secrets.OPENAI_API_KEY }}" ]]; then
            echo "‚ö†Ô∏è  OPENAI_API_KEY secret is missing"
            echo "missing_secrets=true" >> $GITHUB_OUTPUT
          elif [[ -z "${{ secrets.RESEND_API_KEY }}" ]]; then
            echo "‚ö†Ô∏è  RESEND_API_KEY secret is missing" 
            echo "missing_secrets=true" >> $GITHUB_OUTPUT
          else
            echo "‚úÖ Required secrets are present"
            echo "missing_secrets=false" >> $GITHUB_OUTPUT
          fi

      - name: Exit if secrets missing
        if: steps.secrets-check.outputs.missing_secrets == 'true'
        run: |
          echo "üõë Required secrets are missing. RAG maintenance cannot run."
          echo "Please configure OPENAI_API_KEY and RESEND_API_KEY in repository secrets."
          exit 0

      - name: Run RAG evaluation job
        if: github.event.inputs.task == 'eval' || github.event.inputs.task == 'both' || github.event_name == 'schedule'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          FAISS_INDEX_DIR: ${{ secrets.FAISS_INDEX_DIR || './luma-rag/vector_store' }}
        run: |
          echo "üîç Running RAG evaluation..."
          echo "Timestamp: $(date -u)"
          
          # Run evaluation via ts-node
          npx ts-node src/rag/eval_loop.ts || {
            echo "‚ùå RAG evaluation failed"
            exit 1
          }
          
          echo "‚úÖ RAG evaluation completed successfully"

      - name: Run RAG jobs runner
        if: github.event.inputs.task == 'jobs' || github.event.inputs.task == 'both' || github.event_name == 'schedule'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          FAISS_INDEX_DIR: ${{ secrets.FAISS_INDEX_DIR || './luma-rag/vector_store' }}
        run: |
          echo "‚öôÔ∏è Running RAG jobs..."
          echo "Timestamp: $(date -u)"
          
          # Run jobs via ts-node
          npx ts-node src/rag/jobs_runner.ts || {
            echo "‚ùå RAG jobs failed"
            exit 1
          }
          
          echo "‚úÖ RAG jobs completed successfully"

      - name: Summary
        if: always()
        run: |
          echo "üìä RAG Maintenance Summary"
          echo "========================="
          echo "Trigger: ${{ github.event_name }}"
          echo "Task: ${{ github.event.inputs.task || 'both (scheduled)' }}"
          echo "Completed at: $(date -u)"
          echo "========================="